{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import BywayApi from\"../api/api\";import BywayCard from\"./BywayCard\";import LoadingSpinner from\"../common/LoadingSpinner\";// shows cards of each byway that's in the state\n// the issue is that i don't know how to do 'if byway is in this state, return it so it can be displayed on this page'. i don't see where in jobly it does 'if job is from this company return it so it can be displayed on company page.' (looks like it's in the models folder in the backend)\n// has to load all the byways that are in this state - thinking something like 'return byways where state = x’ -  but where does this go? somewhere in the backend i'm sure. should there be a getBywaysByState method in api? otherwise it's basically the same as CompanyList\n// checkout the routes folder in jobly backend, there's a lot in there i haven't done for scenic that needs doing that could be causing problems\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function StateDetail(){var _useParams=useParams(),name=_useParams.name;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stateByways=_useState2[0],setStateByways=_useState2[1];useEffect(function(){function getStateDetail(_x){return _getStateDetail.apply(this,arguments);}function _getStateDetail(){_getStateDetail=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(name){var stateByways;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return BywayApi.findBywaysByState(name);case 2:stateByways=_context.sent;setStateByways(stateByways);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getStateDetail.apply(this,arguments);}getStateDetail(name);},[name]);// if (stateByways.length === 0) return <LoadingSpinner />;\n// if I just link to the same 404 page that byway detail links to then it won't say 'this state doesn't have any byways'\nreturn/*#__PURE__*/_jsx(\"div\",{children:stateByways.length// states.length > 0\n?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Check Out the Scenic Drives Available in \",name,\"!\"]}),stateByways.map(function(s){return/*#__PURE__*/_jsx(BywayCard,{name:s.name,image:s.image,designation:s.designation},s.name);})]}):/*#__PURE__*/_jsxs(\"h4\",{children:[\"Sorry, \",name,\" has no byways.\"]})});}export default StateDetail;// this should be byway information, not state 0 look at CompanyDetail\n// export default function (props) {\n//     let { state } = useParams();\n//     const routeParams = useParams();\n//     console.log('state', routeParams);\n//     const [stateData, setStateData] = useState({})\n//     useEffect(() => {\n//         // stateData = BywayApi.getState\n//         // setStateData(stateData)\n//         setStateData(BywayApi.getState(routeParams.name).then(e => {\n//             console.log(e)\n//         }))\n//     }, [routeParams?.name])\n//     // why the question mark?\n//     // if (routeParams?.name) {\n//     //     return <div>{routeParams.name}</div>;\n//     // } else {\n//     //     return <span></span>;\n//     // }\n// }","map":{"version":3,"names":["React","useState","useEffect","useParams","BywayApi","BywayCard","LoadingSpinner","StateDetail","name","stateByways","setStateByways","getStateDetail","findBywaysByState","length","map","s","image","designation"],"sources":["/Users/mike/Desktop/scenic/src/byways/StateDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BywayApi from \"../api/api\";\nimport BywayCard from \"./BywayCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n\n\n// shows cards of each byway that's in the state\n// the issue is that i don't know how to do 'if byway is in this state, return it so it can be displayed on this page'. i don't see where in jobly it does 'if job is from this company return it so it can be displayed on company page.' (looks like it's in the models folder in the backend)\n// has to load all the byways that are in this state - thinking something like 'return byways where state = x’ -  but where does this go? somewhere in the backend i'm sure. should there be a getBywaysByState method in api? otherwise it's basically the same as CompanyList\n// checkout the routes folder in jobly backend, there's a lot in there i haven't done for scenic that needs doing that could be causing problems\n\n\n\nfunction StateDetail() {\n    const { name } = useParams();\n\n    const [stateByways, setStateByways] = useState([]);\n\n    useEffect(() => {\n        async function getStateDetail(name) {\n            let stateByways = await BywayApi.findBywaysByState(name);\n            setStateByways(stateByways);\n        }\n        getStateDetail(name);\n    }, [name]);\n\n    // if (stateByways.length === 0) return <LoadingSpinner />;\n    // if I just link to the same 404 page that byway detail links to then it won't say 'this state doesn't have any byways'\n\n    return (\n        <div>\n            {/* <h2>Check Out the Scenic Drives Available in {name}!</h2> */}\n            {/*  */}\n            {stateByways.length\n            // states.length > 0\n            ? (\n                <div>\n                    <h2>Check Out the Scenic Drives Available in {name}!</h2>\n                    {stateByways.map(s => (\n                        <BywayCard\n                            key={s.name}\n                            name={s.name}\n                            image={s.image}\n                            designation={s.designation}\n                        />\n                    ))}\n                </div>\n            ) : (\n                <h4>Sorry, {name} has no byways.</h4>\n            )}\n        </div>\n    )\n}\n\nexport default StateDetail;\n\n\n\n\n// this should be byway information, not state 0 look at CompanyDetail\n// export default function (props) {\n//     let { state } = useParams();\n//     const routeParams = useParams();\n//     console.log('state', routeParams);\n//     const [stateData, setStateData] = useState({})\n//     useEffect(() => {\n//         // stateData = BywayApi.getState\n//         // setStateData(stateData)\n//         setStateData(BywayApi.getState(routeParams.name).then(e => {\n//             console.log(e)\n//         }))\n\n//     }, [routeParams?.name])\n//     // why the question mark?\n    \n//     // if (routeParams?.name) {\n//     //     return <div>{routeParams.name}</div>;\n//     // } else {\n//     //     return <span></span>;\n//     // }\n\n\n// }"],"mappings":"gWAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAOC,SAAQ,KAAM,YAAY,CACjC,MAAOC,UAAS,KAAM,aAAa,CACnC,MAAOC,eAAc,KAAM,0BAA0B,CAIrD;AACA;AACA;AACA;AAAA,wFAIA,QAASC,YAAW,EAAG,CACnB,eAAiBJ,SAAS,EAAE,CAApBK,IAAI,YAAJA,IAAI,CAEZ,cAAsCP,QAAQ,CAAC,EAAE,CAAC,wCAA3CQ,WAAW,eAAEC,cAAc,eAElCR,SAAS,CAAC,UAAM,SACGS,eAAc,wJAA7B,iBAA8BH,IAAI,0JACNJ,SAAQ,CAACQ,iBAAiB,CAACJ,IAAI,CAAC,QAApDC,WAAW,eACfC,cAAc,CAACD,WAAW,CAAC,CAAC,sDAC/B,iDACDE,cAAc,CAACH,IAAI,CAAC,CACxB,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV;AACA;AAEA,mBACI,qBAGKC,WAAW,CAACI,MACb;AAAA,cAEI,oCACI,sBAAI,2CAAyC,CAACL,IAAI,CAAC,GAAC,GAAK,CACxDC,WAAW,CAACK,GAAG,CAAC,SAAAC,CAAC,qBACd,KAAC,SAAS,EAEN,IAAI,CAAEA,CAAC,CAACP,IAAK,CACb,KAAK,CAAEO,CAAC,CAACC,KAAM,CACf,WAAW,CAAED,CAAC,CAACE,WAAY,EAHtBF,CAAC,CAACP,IAAI,CAIb,EACL,CAAC,GACA,cAEN,sBAAI,SAAO,CAACA,IAAI,CAAC,iBAAe,GACnC,EACC,CAEd,CAEA,cAAeD,YAAW,CAK1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA"},"metadata":{},"sourceType":"module"}