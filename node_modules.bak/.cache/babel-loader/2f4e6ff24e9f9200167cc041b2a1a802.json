{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/scenic/src/profiles/ProfileForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport BywayApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport LimitedTextArea from \"../common/LimitedTextArea\";\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileForm() {\n  _s();\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    bio: currentUser.bio || \"\",\n    userLocation: currentUser.userLocation || \"\",\n    favoriteState: currentUser.favoriteState || \"\",\n    profilePhoto: currentUser.profilePhoto || \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let profileData = {\n      bio: formData.bio,\n      userLocation: formData.userLocation,\n      favoriteState: formData.favoriteState,\n      profilePhoto: formData.profilePhoto\n    };\n    let username = currentUser.username;\n    let updatedUser;\n    try {\n      updatedUser = await BywayApi.saveProfile(username, profileData);\n    } catch (errors) {\n      console.log('errors', errors);\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n    setFormData(f => ({\n      ...f,\n      password: \"\"\n    }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n    history.push(\"/profile\");\n  }\n\n  /** Handle form data changing */\n  function handleChange(name, value) {\n    // console.log(evt)\n    // const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value\n    }));\n    setFormErrors([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hi there, \", currentUser.username, \"! This is where you create and edit your profile.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LimitedTextArea, {\n          value: formData.bio,\n          limit: 200,\n          onChange: newValue => {\n            return handleChange('bio', newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LimitedTextArea, {\n          value: formData.userLocation,\n          limit: 100,\n          onChange: newValue => {\n            return handleChange('userLocation', newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Favorite state to travel to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LimitedTextArea, {\n          value: formData.favoriteState,\n          limit: 100,\n          onChange: newValue => {\n            return handleChange('favoriteState', newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"profilePhoto\",\n          value: formData.profilePhoto || \"\",\n          onChange: event => {\n            return handleChange('profilePhoto', event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), formErrors.length ? /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"danger\",\n        messages: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : null, saveConfirmed ? /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"success\",\n        messages: [\"Updated successfully.\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mt-4\",\n        onClick: handleSubmit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n_s(ProfileForm, \"cjHyxgzOqZtD2RmfqC948o1ltrI=\", false, function () {\n  return [useHistory];\n});\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useState","useContext","useHistory","Alert","BywayApi","UserContext","LimitedTextArea","useTimedMessage","ProfileForm","currentUser","setCurrentUser","history","formData","setFormData","bio","userLocation","favoriteState","profilePhoto","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","handleSubmit","evt","preventDefault","profileData","username","updatedUser","saveProfile","errors","console","log","f","password","push","handleChange","name","value","newValue","event","target","length"],"sources":["/Users/mike/Desktop/scenic/src/profiles/ProfileForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport BywayApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport LimitedTextArea from \"../common/LimitedTextArea\";\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    bio: currentUser.bio || \"\",\n    userLocation: currentUser.userLocation || \"\",\n    favoriteState: currentUser.favoriteState  || \"\",\n    profilePhoto: currentUser.profilePhoto  || \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      bio: formData.bio,\n      userLocation: formData.userLocation,\n      favoriteState: formData.favoriteState,\n      profilePhoto: formData.profilePhoto,\n    };\n\n    let username = currentUser.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await BywayApi.saveProfile(username, profileData);\n    } catch (errors) {\n      console.log('errors', errors)\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n    history.push(\"/profile\");\n  }\n\n  /** Handle form data changing */\n  function handleChange(name, value) {\n    // console.log(evt)\n    // const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n      <div>\n        <h2>Hi there, {currentUser.username}! This is where you create and edit your profile.</h2>\n        <h3>Profile</h3>\n            <form>\n              <div>\n                <label>Bio</label>\n                <LimitedTextArea value={formData.bio} limit={200} onChange={(newValue) => {return handleChange('bio', newValue)}} />\n              </div>\n              <div>\n                <label>Location</label>\n                <LimitedTextArea value={formData.userLocation} limit={100} onChange={(newValue) => {return handleChange('userLocation', newValue)}} />\n                {/* <input\n                    name=\"userLocation\"\n                    value={formData.location}\n                    onChange={handleChange}\n                /> */}\n                {/* there's two different input types so might need two versions of handleChange */}\n              </div>\n              <div>\n                <label>Favorite state to travel to</label>\n                <LimitedTextArea value={formData.favoriteState} limit={100} onChange={(newValue) => {return handleChange('favoriteState', newValue)}} />\n              </div>\n              <div>\n                <label>Profile Photo</label>\n                {/* <LimitedTextArea value={formData.profilePhoto} limit={1000} onChange={(newValue) => {return handleChange('profilePhoto', newValue)}} /> */}\n                <input\n                    name=\"profilePhoto\"\n                    value={formData.profilePhoto || \"\"}\n                    onChange={(event) => {return handleChange('profilePhoto', event.target.value)}}\n                />\n              </div>\n              {/* switched profile photo back a regular input because limited text area doesn't make sense for a URL, but that means that the handleChange is going to be a little different for the different inputs. with a regular input the onChange uses an event, not newValue */}\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}