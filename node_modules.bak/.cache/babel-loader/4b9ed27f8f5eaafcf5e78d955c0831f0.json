{"ast":null,"code":"import _toConsumableArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useContext}from\"react\";import{useParams}from\"react-router-dom\";import BywayApi from\"../api/api\";import CommentForm from\"../actions/CommentForm\";import FavoriteAByway from\"../actions/FavoriteAByway\";import UserContext from\"../auth/UserContext\";import moment from'moment';// see Moment docs on display for how to format comment dates/times in different ways\nimport{useToasts}from'react-toast-notifications';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BywayDetail(){var _useParams=useParams(),name=_useParams.name;var _useContext=useContext(UserContext),currentUser=_useContext.currentUser;var _useToasts=useToasts(),addToast=_useToasts.addToast;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),byway=_useState2[0],setByway=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),comments=_useState4[0],setComments=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isFavorite=_useState6[0],setIsFavorite=_useState6[1];useEffect(function(){function getByway(_x){return _getByway.apply(this,arguments);}function _getByway(){_getByway=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(name){var b,c,favorites;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return BywayApi.getByway(name);case 3:b=_context.sent;setByway(b);_context.next=7;return BywayApi.getCommentsByByway(b.id);case 7:c=_context.sent;setComments(c);_context.next=11;return BywayApi.getUserFavorites(currentUser.username,\"name\",\"asc\");case 11:favorites=_context.sent;if(favorites.find(function(i){return i.byway_id===b.id;})){setIsFavorite(true);}_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);if(_context.t0.length>0){addToast(_context.t0[0],{appearance:'error'});}case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return _getByway.apply(this,arguments);}getByway(name);},[name]);// empty array makes it only happen first time\nvar addComment=function addComment(comment){var updatedComments=[].concat(_toConsumableArray(comments),[comment]);setComments(updatedComments);};function checkGeoFeaturesLength(byway){var tempString=byway.geographicFeatures;tempString=tempString[0].toUpperCase()+tempString.slice(1);var splitted=tempString.split(',');if(splitted.length>=3){// if byway has 3 or more - features = Feature, feature and feature\n// return byway.geographicFeatures.charAt(0).toUpperCase() + byway.geographicFeatures.replace(/(\"[^\"]+\"|\\w+)$/, \"and $1\").slice(1);\nvar comma_separated_list_until_last_element=splitted.slice(0,splitted.length-1).join(', ');// takes the splitted string, slices it from beginning up until the last element and joins them on comma, but there won't be a comma after the last feature, meaning we can add the last feature from splitted and return it at the end of this below with 'and' in front of it but no comma\nreturn comma_separated_list_until_last_element+' and '+splitted[splitted.length-1];//return byway.geographicFeatures.charAt(0).toUpperCase() + byway.geographicFeatures.slice(1, lastIndex) + ' and' + byway.geographicFeatures(lastIndex + 1);\n}else if(splitted.length===2){// if byway has 2 - features = Feature and feature\n// this replaced the comma with regex - return byway.geographicFeatures.charAt(0).toUpperCase() + byway.geographicFeatures.replace(/(\"[^\"]+\"|\\w+)$/, \"and $1\").slice(1);\nvar newString=splitted[0]+' and'+splitted[1];return newString.charAt(0).toUpperCase()+newString.slice(1);}else if(splitted.length===1){// if byway has 1 - features = Feature\n// byway with one feature (charles street) showed 'no features verified'\n// after adding the .length to byway.geoFeatures charles street shows '3 or more'\nreturn splitted[0];}else{// if byway has none - 'No geographic features have been verified for this byway'\n// byway with no features (hallowed ground) showed 'no features verified', maybe just because things are falling down to this part of the function\n// after adding the .length to byway.geoFeatures this shows 'no features verified'\nreturn\"No geographic features have been verified for this byway.\";}}return/*#__PURE__*/_jsx(\"div\",{children:byway?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:byway.name}),/*#__PURE__*/_jsx(\"img\",{src:byway.image,alt:byway.name}),/*#__PURE__*/_jsx(\"h2\",{children:byway.state}),/*#__PURE__*/_jsxs(\"h3\",{children:[byway.length,\" miles / \",Math.round(parseFloat(byway.length)*1.60934),\" kilometres\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Fees:\"}),\" \",byway.fees]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Wondering what kind of natural settings you'll see on this byway?\"}),\" \",checkGeoFeaturesLength(byway),\".\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"b\",{children:[\"About \",byway.name]}),/*#__PURE__*/_jsx(\"br\",{}),byway.description]}),isFavorite===true?/*#__PURE__*/_jsx(\"h4\",{children:\"Byway is in your favorites\"}):/*#__PURE__*/_jsx(FavoriteAByway,{id:byway.id}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Comment on \",byway.name]}),/*#__PURE__*/_jsx(CommentForm,{name:byway.name,id:byway.id,onAdd:addComment}),/*#__PURE__*/_jsx(\"div\",{children:comments?/*#__PURE__*/_jsx(\"div\",{children:comments.map(function(c,i){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"User \",/*#__PURE__*/_jsx(\"a\",{href:\"/profile/\".concat(c.username),children:c.username}),\" said this at \",moment(c.create_at).format(\"MM/DD/YYYY hh:mm a\"),\":\"]}),/*#__PURE__*/_jsx(\"p\",{children:c.comment})]},i);})}):/*#__PURE__*/_jsx(\"p\",{children:\"no one has commented\"})})]}):/*#__PURE__*/_jsx(\"h1\",{children:\"no byway by that name\"})});}export default BywayDetail;","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","BywayApi","CommentForm","FavoriteAByway","UserContext","moment","useToasts","BywayDetail","name","currentUser","addToast","byway","setByway","comments","setComments","isFavorite","setIsFavorite","getByway","b","getCommentsByByway","id","c","getUserFavorites","username","favorites","find","i","byway_id","length","appearance","addComment","comment","updatedComments","checkGeoFeaturesLength","tempString","geographicFeatures","toUpperCase","slice","splitted","split","comma_separated_list_until_last_element","join","newString","charAt","image","state","Math","round","parseFloat","fees","description","map","create_at","format"],"sources":["/Users/mike/Desktop/scenic/src/byways/BywayDetail.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BywayApi from \"../api/api\";\nimport CommentForm from \"../actions/CommentForm\";\nimport FavoriteAByway from \"../actions/FavoriteAByway\";\nimport UserContext from \"../auth/UserContext\";\nimport moment from 'moment';\n// see Moment docs on display for how to format comment dates/times in different ways\nimport { useToasts } from 'react-toast-notifications';\n\n\nfunction BywayDetail() {\n    const { name } = useParams();\n    const { currentUser } = useContext(UserContext);\n    const { addToast } = useToasts();\n    const [byway, setByway] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [isFavorite, setIsFavorite] = useState(false);\n\n\n    useEffect(() => {        \n        async function getByway(name) {\n            try {\n                const b = await BywayApi.getByway(name)\n                setByway(b);\n                const c = await BywayApi.getCommentsByByway(b.id);\n                setComments(c);\n                const favorites = await BywayApi.getUserFavorites(currentUser.username, \"name\", \"asc\");\n\n                if (favorites.find(i => i.byway_id === b.id)) {\n                    setIsFavorite(true);\n                } \n        } catch (errors) {\n            if (errors.length > 0) {\n                addToast(errors[0], { appearance: 'error' });\n            }\n            }\n        }    \n\n        getByway(name);\n    }, [name]);\n\n\n    // empty array makes it only happen first time\n\n    const addComment = (comment) => {\n        const updatedComments = [...comments, comment]\n        setComments(updatedComments);\n    }\n\n    function checkGeoFeaturesLength(byway) {\n        let tempString = byway.geographicFeatures\n        tempString = tempString[0].toUpperCase() + tempString.slice(1)\n        const splitted = tempString.split(',')\n        if (splitted.length >= 3) {\n            // if byway has 3 or more - features = Feature, feature and feature\n            // return byway.geographicFeatures.charAt(0).toUpperCase() + byway.geographicFeatures.replace(/(\"[^\"]+\"|\\w+)$/, \"and $1\").slice(1);\n            const comma_separated_list_until_last_element = splitted.slice(0, splitted.length - 1).join(', ')\n            // takes the splitted string, slices it from beginning up until the last element and joins them on comma, but there won't be a comma after the last feature, meaning we can add the last feature from splitted and return it at the end of this below with 'and' in front of it but no comma\n            return comma_separated_list_until_last_element + ' and ' + splitted[splitted.length - 1]\n            //return byway.geographicFeatures.charAt(0).toUpperCase() + byway.geographicFeatures.slice(1, lastIndex) + ' and' + byway.geographicFeatures(lastIndex + 1);\n        } else if (splitted.length === 2) {\n            // if byway has 2 - features = Feature and feature\n            // this replaced the comma with regex - return byway.geographicFeatures.charAt(0).toUpperCase() + byway.geographicFeatures.replace(/(\"[^\"]+\"|\\w+)$/, \"and $1\").slice(1);\n            const newString = splitted[0] + ' and' + splitted[1]\n            return newString.charAt(0).toUpperCase() + newString.slice(1)\n        } else if (splitted.length === 1) {\n            // if byway has 1 - features = Feature\n            // byway with one feature (charles street) showed 'no features verified'\n            // after adding the .length to byway.geoFeatures charles street shows '3 or more'\n            return splitted[0]\n        } else {\n            // if byway has none - 'No geographic features have been verified for this byway'\n            // byway with no features (hallowed ground) showed 'no features verified', maybe just because things are falling down to this part of the function\n            // after adding the .length to byway.geoFeatures this shows 'no features verified'\n            return \"No geographic features have been verified for this byway.\";\n\n        }\n        \n    }\n\n    return (\n        <div>\n            {byway\n                ? (\n                    <div>\n                        <h1>{byway.name}</h1>\n                        <img src={byway.image} alt={byway.name}></img>\n                        <h2>{byway.state}</h2>\n                        <h3>{byway.length} miles / { Math.round((parseFloat(byway.length) * 1.60934)) } kilometres</h3>\n                        <p><b>Fees:</b> {byway.fees}</p>\n                        {<p><b>Wondering what kind of natural settings you'll see on this byway?</b> {checkGeoFeaturesLength(byway)}.</p> }\n                        <p><b>About {byway.name}</b><br></br>{byway.description}</p>\n                        {isFavorite === true\n                        ? (\n                            <h4>Byway is in your favorites</h4>\n                        ) : (\n                            <FavoriteAByway id={byway.id} />\n                        )\n                        }\n                        <h4>Comment on {byway.name}</h4>\n                        <CommentForm name={byway.name} id={byway.id} onAdd={addComment}/>\n                        <div>\n                            {comments\n                            ? (\n                                <div>\n                                    {comments.map((c, i) => (\n                                        <div key={i}>\n                                            <h4>User <a href={`/profile/${c.username}`}>{c.username}</a> said this at {moment(c.create_at).format(\"MM/DD/YYYY hh:mm a\")}:</h4>\n                                            <p>{c.comment}</p>\n                                        </div>\n                                    ))}\n                                </div>\n                            ) : (\n                                <p>no one has commented</p>\n                            )\n                            }\n                        </div>\n\n                    </div>\n                    \n                ) : (\n                    <h1>no byway by that name</h1>\n                )\n            }\n        </div>\n    )\n}\n\nexport default BywayDetail;"],"mappings":"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"},"metadata":{},"sourceType":"module"}