{"ast":null,"code":"import _slicedToArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import Checkbox from\"./Checkbox\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GeographicFeaturesSearch(_ref){var onChange=_ref.onChange;var categories=['canyon','coastline','desert','forest','grasslands','lake','mountains','swamp','river','urban'];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];// didn't work properly without doing the useState and useEffect and changeHandler here and instead doing it in the SearchForm component where it's called\nuseEffect(function(){onChange(selected);},[selected]);var changeHandler=function changeHandler(props){if(props.checked){var index=selected.indexOf(props.value);if(index>-1){selected.splice(index,1);setSelected(selected);}else{selected.push(props.value);setSelected(selected);}// this is creating an array, checking to be sure that what's selected isn't already in the array then adding\n// this is used in SearchForm so that's where the value prop is given - value={geoFeaturesSelect}\n}};return/*#__PURE__*/_jsx(\"div\",{children:categories.map(function(c){return/*#__PURE__*/_jsxs(\"div\",{className:\"single-checkbox\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:c,children:c},c),/*#__PURE__*/_jsx(Checkbox,{onChange:changeHandler,name:c})]});})});}export default GeographicFeaturesSearch;","map":{"version":3,"names":["React","useEffect","useState","Checkbox","GeographicFeaturesSearch","onChange","categories","selected","setSelected","changeHandler","props","checked","index","indexOf","value","splice","push","map","c"],"sources":["/Users/mike/Desktop/scenic/src/search/GeographicFeaturesSearch.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Checkbox from \"./Checkbox\";\n\nfunction GeographicFeaturesSearch({ onChange }) {\n    const categories = [ 'canyon', 'coastline', 'desert', 'forest', 'grasslands', 'lake', 'mountains', 'swamp', 'river', 'urban'];\n    const [selected, setSelected] = useState([]);\n    // didn't work properly without doing the useState and useEffect and changeHandler here and instead doing it in the SearchForm component where it's called\n        \n    useEffect(() => {\n        onChange(selected)\n    }, [selected]);\n\n    const changeHandler = (props) => {\n        if (props.checked) {\n            const index = selected.indexOf(props.value)\n            if (index > -1) {\n                selected.splice(index, 1)\n                setSelected(selected)\n            } else {\n                selected.push(props.value);\n                setSelected(selected)\n            }\n            // this is creating an array, checking to be sure that what's selected isn't already in the array then adding\n            // this is used in SearchForm so that's where the value prop is given - value={geoFeaturesSelect}\n            \n        }\n    }\n    return (\n        <div>\n            {categories.map(c => (\n                <div className=\"single-checkbox\">\n                    <label key={c} htmlFor={c}>{c}</label>\n                    <Checkbox onChange={changeHandler} name={c}/>\n                </div>\n            ))\n    \n            }\n        </div>\n    )\n}\n \n\nexport default GeographicFeaturesSearch;"],"mappings":"gHAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAOC,SAAQ,KAAM,YAAY,CAAC,wFAElC,QAASC,yBAAwB,MAAe,IAAZC,SAAQ,MAARA,QAAQ,CACxC,GAAMC,WAAU,CAAG,CAAE,QAAQ,CAAE,WAAW,CAAE,QAAQ,CAAE,QAAQ,CAAE,YAAY,CAAE,MAAM,CAAE,WAAW,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CAAC,CAC7H,cAAgCJ,QAAQ,CAAC,EAAE,CAAC,wCAArCK,QAAQ,eAAEC,WAAW,eAC5B;AAEAP,SAAS,CAAC,UAAM,CACZI,QAAQ,CAACE,QAAQ,CAAC,CACtB,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,GAAME,cAAa,CAAG,QAAhBA,cAAa,CAAIC,KAAK,CAAK,CAC7B,GAAIA,KAAK,CAACC,OAAO,CAAE,CACf,GAAMC,MAAK,CAAGL,QAAQ,CAACM,OAAO,CAACH,KAAK,CAACI,KAAK,CAAC,CAC3C,GAAIF,KAAK,CAAG,CAAC,CAAC,CAAE,CACZL,QAAQ,CAACQ,MAAM,CAACH,KAAK,CAAE,CAAC,CAAC,CACzBJ,WAAW,CAACD,QAAQ,CAAC,CACzB,CAAC,IAAM,CACHA,QAAQ,CAACS,IAAI,CAACN,KAAK,CAACI,KAAK,CAAC,CAC1BN,WAAW,CAACD,QAAQ,CAAC,CACzB,CACA;AACA;AAEJ,CACJ,CAAC,CACD,mBACI,qBACKD,UAAU,CAACW,GAAG,CAAC,SAAAC,CAAC,qBACb,aAAK,SAAS,CAAC,iBAAiB,wBAC5B,cAAe,OAAO,CAAEA,CAAE,UAAEA,CAAC,EAAjBA,CAAC,CAAyB,cACtC,KAAC,QAAQ,EAAC,QAAQ,CAAET,aAAc,CAAC,IAAI,CAAES,CAAE,EAAE,GAC3C,EACT,CAAC,EAGA,CAEd,CAGA,cAAed,yBAAwB"},"metadata":{},"sourceType":"module"}