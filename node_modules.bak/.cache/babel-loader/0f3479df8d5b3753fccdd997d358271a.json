{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/scenic/src/search/FilterSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BywayApi from \"../api/api\";\nimport SearchForm from \"./SearchForm\";\nimport BywayCard from \"../byways/BywayCard\";\nimport Pagination from \"../common/Pagination\";\nimport { useToasts } from 'react-toast-notifications';\n\n// search via filters, go to browse by state, go to display and search users\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterSearch() {\n  _s();\n  const {\n    addToast\n  } = useToasts();\n  const [byways, setByways] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [currentByWays, setCurrentByWays] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bywaysPerPage] = useState(10);\n  const [nPages, setNPages] = useState(0);\n  const history = useHistory();\n  useEffect(() => {\n    setNPages(Math.ceil(byways.length / bywaysPerPage));\n    const indexOfLastByway = currentPage * bywaysPerPage;\n    const indexOfFirstByway = indexOfLastByway - bywaysPerPage;\n    const currentByways = byways.slice(indexOfFirstByway, indexOfLastByway);\n    setCurrentByWays(currentByways);\n  }, [byways, currentPage]);\n  // every time currentPage changes, the useEffect runs\n\n  useEffect(() => {\n    async function getBywaysForDisplay() {\n      let byways = await BywayApi.getAllByways();\n      setByways(byways);\n    }\n    getBywaysForDisplay();\n  }, []);\n  // display error to user - try/catch?\n\n  async function filterByways(filters) {\n    try {\n      debugger;\n      let byways = await BywayApi.search(filters);\n      setByways(byways);\n      if (!byways.length) {\n        history.push(\"/noresults\");\n      }\n    } catch (errors) {\n      if (errors.length > 0) {\n        addToast(errors[0], {\n          appearance: 'error'\n        });\n        // can add error messaging/alerts with Toast before anything is sent to the back, like so:\n        //addToast(\"your search term must be more than 3 characters\", { appearance: 'error' });\n      }\n\n      setErrors(errors);\n    }\n  }\n  async function search(name) {\n    let byways = await BywayApi.search({\n      name\n    });\n    setByways(byways);\n    if (!byways.length) {\n      history.push(\"/noresults\");\n      // Alert type=\"success\" messages={[\"Updated successfully.\"]} \n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchForm, {\n        searchFor: search,\n        filterByways: filterByways,\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentByWays.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: currentByWays.map(s => /*#__PURE__*/_jsxDEV(BywayCard, {\n            name: s.name,\n            image: s.image,\n            designation: s.designation\n          }, s.name + s.state, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            nPages: nPages,\n            currentPage: currentPage,\n            setCurrentPage: setCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"no byways in system.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(FilterSearch, \"MXNkZPPenEgc1ZkTuNME2yS/+68=\", false, function () {\n  return [useToasts, useHistory];\n});\n_c = FilterSearch;\nexport default FilterSearch;\nvar _c;\n$RefreshReg$(_c, \"FilterSearch\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","BywayApi","SearchForm","BywayCard","Pagination","useToasts","FilterSearch","addToast","byways","setByways","errors","setErrors","currentByWays","setCurrentByWays","currentPage","setCurrentPage","bywaysPerPage","nPages","setNPages","history","Math","ceil","length","indexOfLastByway","indexOfFirstByway","currentByways","slice","getBywaysForDisplay","getAllByways","filterByways","filters","search","push","appearance","name","map","s","image","designation","state"],"sources":["/Users/mike/Desktop/scenic/src/search/FilterSearch.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BywayApi from \"../api/api\";\nimport SearchForm from \"./SearchForm\";\nimport BywayCard from \"../byways/BywayCard\";\nimport Pagination from \"../common/Pagination\";\nimport { useToasts } from 'react-toast-notifications';\n\n// search via filters, go to browse by state, go to display and search users\n\nfunction FilterSearch() {\n    const { addToast } = useToasts();\n    const [byways, setByways] = useState([]);\n    const [errors, setErrors] = useState([]);\n    const [currentByWays, setCurrentByWays] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [bywaysPerPage] = useState(10);\n    \n    const [nPages, setNPages] = useState(0); \n\n    const history = useHistory();\n    \n    useEffect(() => {\n        setNPages(Math.ceil(byways.length / bywaysPerPage))\n        const indexOfLastByway = currentPage * bywaysPerPage;\n        const indexOfFirstByway = indexOfLastByway - bywaysPerPage;\n        const currentByways = byways.slice(indexOfFirstByway, indexOfLastByway)\n        setCurrentByWays(currentByways)\n\n    }, [byways, currentPage])\n    // every time currentPage changes, the useEffect runs\n\n    useEffect(() => {\n        async function getBywaysForDisplay() {\n            let byways = await BywayApi.getAllByways();\n            setByways(byways);\n        }\n        getBywaysForDisplay();\n    }, []);\n    // display error to user - try/catch?\n\n    async function filterByways(filters) {\n        try {\n            debugger\n            let byways = await BywayApi.search(filters);\n            setByways(byways);\n            if (!byways.length) {\n                history.push(\"/noresults\");\n            }\n        } catch (errors) {\n            if (errors.length > 0) {\n                addToast(errors[0], { appearance: 'error' });\n                // can add error messaging/alerts with Toast before anything is sent to the back, like so:\n                //addToast(\"your search term must be more than 3 characters\", { appearance: 'error' });\n            }\n            setErrors(errors);\n        }\n    }\n\n    async function search(name) {\n        let byways = await BywayApi.search({name});\n        setByways(byways);\n        if (!byways.length) {\n            history.push(\"/noresults\");\n            // Alert type=\"success\" messages={[\"Updated successfully.\"]} \n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <SearchForm searchFor={search} filterByways={filterByways} errors={errors} />\n                {/* search and filterByways are defined here, passing them over to SearchForm to make them useable there; don't actually know if errors is necessary to pass, didn't end up using it */}\n            </div>\n            <div>\n                {currentByWays.length > 0\n                ? (\n                    <div>\n                        <div>\n                            {currentByWays.map(s => (\n                                <BywayCard\n                                    key={s.name + s.state}\n                                    name={s.name}\n                                    image={s.image}\n                                    designation={s.designation}\n                                />\n                            ))}\n                        </div>\n                        <div>\n                            <Pagination\n                                nPages={nPages}\n                                currentPage={currentPage}\n                                setCurrentPage={setCurrentPage}\n                            />\n                        </div>\n                        \n                    </div>\n                ) : (\n                    <h4>no byways in system.</h4>\n                )}\n            </div>\n        </div>\n        \n    );\n}\n\nexport default FilterSearch;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}