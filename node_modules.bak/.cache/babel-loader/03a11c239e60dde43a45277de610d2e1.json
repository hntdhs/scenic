{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{BrowserRouter}from\"react-router-dom\";import useLocalStorage from\"./hooks/useLocalStorage\";import Navigation from\"./routes-nav/Navigation\";import Routes from\"./routes-nav/Routes\";import LoadingSpinner from\"./common/LoadingSpinner\";import BywayApi from\"./api/api\";import UserContext from\"./auth/UserContext\";import jwt from\"jsonwebtoken\";import ScrollToTop from\"./common/ScrollToTop\";import{ToastProvider}from'react-toast-notifications';// Key name for storing token in localStorage for \"remember me\" re-login\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TOKEN_STORAGE_ID=\"scenic-token\";/** Byways application.\n *\n * - infoLoaded: has user data been pulled from API?\n *   (this manages spinner for \"loading...\")\n *\n * - currentUser: user obj from API. This becomes the canonical way to tell\n *   if someone is logged in. This is passed around via context throughout app.\n *\n * - token: for logged in users, this is their authentication JWT.\n *   Is required to be set for most API calls. This is initially read from\n *   localStorage and synced to there via the useLocalStorage hook.\n *\n * App -> Routes\n */function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),infoLoaded=_useState2[0],setInfoLoaded=_useState2[1];var _useState3=useState(new Set([])),_useState4=_slicedToArray(_useState3,2),applicationIds=_useState4[0],setApplicationIds=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),currentUser=_useState6[0],setCurrentUser=_useState6[1];var _useLocalStorage=useLocalStorage(TOKEN_STORAGE_ID),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),token=_useLocalStorage2[0],setToken=_useLocalStorage2[1];console.debug(\"App\",\"infoLoaded=\",infoLoaded,\"currentUser=\",currentUser,\"token=\",token);// Load user info from API. Until a user is logged in and they have a token,\n// this should not run. It only needs to re-run when a user logs out, so\n// the value of the token is a dependency for this effect.\nuseEffect(function loadUserInfo(){console.debug(\"App useEffect loadUserInfo\",\"token=\",token);function getCurrentUser(){return _getCurrentUser.apply(this,arguments);}// set infoLoaded to false while async getCurrentUser runs; once the\n// data is fetched (or even if an error happens!), this will be set back\n// to false to control the spinner.\nfunction _getCurrentUser(){_getCurrentUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _jwt$decode,username,_currentUser;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!token){_context.next=14;break;}_context.prev=1;_jwt$decode=jwt.decode(token),username=_jwt$decode.username;// put the token on the Api class so it can use it to call the API.\nBywayApi.token=token;_context.next=6;return BywayApi.getCurrentUser(username);case 6:_currentUser=_context.sent;setCurrentUser(_currentUser);_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);console.error(\"App loadUserInfo: problem loading\",_context.t0);setCurrentUser(null);case 14:setInfoLoaded(true);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return _getCurrentUser.apply(this,arguments);}setInfoLoaded(false);getCurrentUser();},[token]);/** Handles site-wide logout. */function logout(){setCurrentUser(null);setToken(null);}/** Handles site-wide signup.\n   *\n   * Automatically logs them in (set token) upon signup.\n   *\n   * Make sure you await this function and check its return value!\n   */function signup(_x){return _signup.apply(this,arguments);}/** Handles site-wide login.\n   *\n   * Make sure you await this function and check its return value!\n   */function _signup(){_signup=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(signupData){var _token;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return BywayApi.signup(signupData);case 3:_token=_context2.sent;setToken(_token);return _context2.abrupt(\"return\",{success:true});case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.error(\"signup failed\",_context2.t0);return _context2.abrupt(\"return\",{success:false,errors:_context2.t0});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return _signup.apply(this,arguments);}function login(_x2){return _login.apply(this,arguments);}function _login(){_login=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(loginData){var _token2;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return BywayApi.login(loginData);case 3:_token2=_context3.sent;setToken(_token2);return _context3.abrupt(\"return\",{success:true});case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.error(\"login failed\",_context3.t0);return _context3.abrupt(\"return\",{success:false,errors:_context3.t0});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return _login.apply(this,arguments);}if(!infoLoaded)return/*#__PURE__*/_jsx(LoadingSpinner,{});return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(ToastProvider,{children:/*#__PURE__*/_jsx(ScrollToTop,{children:/*#__PURE__*/_jsx(UserContext.Provider,{value:{currentUser:currentUser,setCurrentUser:setCurrentUser},children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navigation,{logout:logout}),/*#__PURE__*/_jsx(Routes,{login:login,signup:signup,logout:logout})]})})})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","useLocalStorage","Navigation","Routes","LoadingSpinner","BywayApi","UserContext","jwt","ScrollToTop","ToastProvider","TOKEN_STORAGE_ID","App","infoLoaded","setInfoLoaded","Set","applicationIds","setApplicationIds","currentUser","setCurrentUser","token","setToken","console","debug","loadUserInfo","getCurrentUser","decode","username","error","logout","signup","signupData","success","errors","login","loginData"],"sources":["/Users/mike/Desktop/scenic/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport BywayApi from \"./api/api\";\nimport UserContext from \"./auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport ScrollToTop from \"./common/ScrollToTop\";\nimport { ToastProvider } from 'react-toast-notifications';\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = \"scenic-token\";\n\n/** Byways application.\n *\n * - infoLoaded: has user data been pulled from API?\n *   (this manages spinner for \"loading...\")\n *\n * - currentUser: user obj from API. This becomes the canonical way to tell\n *   if someone is logged in. This is passed around via context throughout app.\n *\n * - token: for logged in users, this is their authentication JWT.\n *   Is required to be set for most API calls. This is initially read from\n *   localStorage and synced to there via the useLocalStorage hook.\n *\n * App -> Routes\n */\n\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [applicationIds, setApplicationIds] = useState(new Set([]));\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  console.debug(\n      \"App\",\n      \"infoLoaded=\", infoLoaded,\n      \"currentUser=\", currentUser,\n      \"token=\", token,\n  );\n\n  // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          // put the token on the Api class so it can use it to call the API.\n          BywayApi.token = token;\n          let currentUser = await BywayApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          \n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n\n    // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  /** Handles site-wide logout. */\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  /** Handles site-wide signup.\n   *\n   * Automatically logs them in (set token) upon signup.\n   *\n   * Make sure you await this function and check its return value!\n   */\n  async function signup(signupData) {\n    try {\n      let token = await BywayApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  /** Handles site-wide login.\n   *\n   * Make sure you await this function and check its return value!\n   */\n  async function login(loginData) {\n    try {\n      let token = await BywayApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n      <BrowserRouter>\n        <ToastProvider>\n          <ScrollToTop>\n            <UserContext.Provider\n                value={{ currentUser, setCurrentUser }}>\n              <div className=\"App\">\n                <Navigation logout={logout} />\n                <Routes login={login} signup={signup} logout={logout}/>\n              </div>\n            </UserContext.Provider>\n          </ScrollToTop>\n        </ToastProvider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}