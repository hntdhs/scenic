{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _defineProperty from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import Alert from\"../common/Alert\";import BywayApi from\"../api/api\";import UserContext from\"../auth/UserContext\";import LimitedTextArea from\"../common/LimitedTextArea\";// eslint-disable-next-line\nimport useTimedMessage from\"../hooks/useTimedMessage\";/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function ProfileForm(){var _useContext=useContext(UserContext),currentUser=_useContext.currentUser,setCurrentUser=_useContext.setCurrentUser;var history=useHistory();var _useState=useState({bio:currentUser.bio||\"\",userLocation:currentUser.userLocation||\"\",favoriteState:currentUser.favoriteState||\"\",profilePhoto:currentUser.profilePhoto||\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formErrors=_useState4[0],setFormErrors=_useState4[1];// switch to use our fancy limited-time-display message hook\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),saveConfirmed=_useState6[0],setSaveConfirmed=_useState6[1];// const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n/** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}/** Handle form data changing */function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(evt){var profileData,username,updatedUser;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:evt.preventDefault();profileData={bio:formData.bio,userLocation:formData.userLocation,favoriteState:formData.favoriteState,profilePhoto:formData.profilePhoto};username=currentUser.username;_context.prev=3;_context.next=6;return BywayApi.saveProfile(username,profileData);case 6:updatedUser=_context.sent;_context.next=15;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);console.log('errors',_context.t0);debugger;setFormErrors(_context.t0);return _context.abrupt(\"return\");case 15:setFormData(function(f){return _objectSpread(_objectSpread({},f),{},{password:\"\"});});setFormErrors([]);setSaveConfirmed(true);// trigger reloading of user information throughout the site\nsetCurrentUser(updatedUser);history.push(\"/profile\");case 20:case\"end\":return _context.stop();}}},_callee,null,[[3,9]]);}));return _handleSubmit.apply(this,arguments);}function handleChange(name,value){// console.log(evt)\n// const { name, value } = evt.target;\nsetFormData(function(f){return _objectSpread(_objectSpread({},f),{},_defineProperty({},name,value));});setFormErrors([]);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Hi there, \",currentUser.username,\"! This is where you create and edit your profile.\"]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Profile\"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bio\"}),/*#__PURE__*/_jsx(LimitedTextArea,{value:formData.bio,limit:200,onChange:function onChange(newValue){return handleChange('bio',newValue);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Location\"}),/*#__PURE__*/_jsx(LimitedTextArea,{value:formData.userLocation,limit:100,onChange:function onChange(newValue){return handleChange('userLocation',newValue);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Favorite state to travel to\"}),/*#__PURE__*/_jsx(LimitedTextArea,{value:formData.favoriteState,limit:100,onChange:function onChange(newValue){return handleChange('favoriteState',newValue);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Profile Photo\"}),/*#__PURE__*/_jsx(\"input\",{name:\"profilePhoto\",value:formData.profilePhoto||\"\",onChange:function onChange(event){return handleChange('profilePhoto',event.target.value);}})]}),formErrors.length?/*#__PURE__*/_jsx(Alert,{type:\"danger\",messages:formErrors}):null,saveConfirmed?/*#__PURE__*/_jsx(Alert,{type:\"success\",messages:[\"Updated successfully.\"]}):null,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-block mt-4\",onClick:handleSubmit,children:\"Save Changes\"})]})]});}export default ProfileForm;","map":{"version":3,"names":["React","useState","useContext","useHistory","Alert","BywayApi","UserContext","LimitedTextArea","useTimedMessage","ProfileForm","currentUser","setCurrentUser","history","bio","userLocation","favoriteState","profilePhoto","formData","setFormData","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","handleSubmit","evt","preventDefault","profileData","username","saveProfile","updatedUser","console","log","f","password","push","handleChange","name","value","newValue","event","target","length"],"sources":["/Users/mike/Desktop/scenic/src/profiles/ProfileForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport BywayApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport LimitedTextArea from \"../common/LimitedTextArea\";\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    bio: currentUser.bio || \"\",\n    userLocation: currentUser.userLocation || \"\",\n    favoriteState: currentUser.favoriteState  || \"\",\n    profilePhoto: currentUser.profilePhoto  || \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      bio: formData.bio,\n      userLocation: formData.userLocation,\n      favoriteState: formData.favoriteState,\n      profilePhoto: formData.profilePhoto,\n    };\n\n    let username = currentUser.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await BywayApi.saveProfile(username, profileData);\n    } catch (errors) {\n      console.log('errors', errors)\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n    history.push(\"/profile\");\n  }\n\n  /** Handle form data changing */\n  function handleChange(name, value) {\n    // console.log(evt)\n    // const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n      <div>\n        <h2>Hi there, {currentUser.username}! This is where you create and edit your profile.</h2>\n        <h3>Profile</h3>\n            <form>\n              <div>\n                <label>Bio</label>\n                <LimitedTextArea value={formData.bio} limit={200} onChange={(newValue) => {return handleChange('bio', newValue)}} />\n              </div>\n              <div>\n                <label>Location</label>\n                <LimitedTextArea value={formData.userLocation} limit={100} onChange={(newValue) => {return handleChange('userLocation', newValue)}} />\n                {/* <input\n                    name=\"userLocation\"\n                    value={formData.location}\n                    onChange={handleChange}\n                /> */}\n                {/* there's two different input types so might need two versions of handleChange */}\n              </div>\n              <div>\n                <label>Favorite state to travel to</label>\n                <LimitedTextArea value={formData.favoriteState} limit={100} onChange={(newValue) => {return handleChange('favoriteState', newValue)}} />\n              </div>\n              <div>\n                <label>Profile Photo</label>\n                {/* <LimitedTextArea value={formData.profilePhoto} limit={1000} onChange={(newValue) => {return handleChange('profilePhoto', newValue)}} /> */}\n                <input\n                    name=\"profilePhoto\"\n                    value={formData.profilePhoto || \"\"}\n                    onChange={(event) => {return handleChange('profilePhoto', event.target.value)}}\n                />\n              </div>\n              {/* switched profile photo back a regular input because limited text area doesn't make sense for a URL, but that means that the handleChange is going to be a little different for the different inputs. with a regular input the onChange uses an event, not newValue */}\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}