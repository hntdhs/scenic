{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/scenic/src/actions/FavoriteAByway.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BywayApi from \"../api/api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport UserContext from \"../auth/UserContext\";\nimport Alert from \"../common/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteAByway(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  const {\n    byway\n  } = useParams();\n  const {\n    currentUser\n  } = useContext(UserContext);\n\n  // const [favorite, setFavorite] = useState(false);\n  // might need state for changing status on page from something that can be favorited to something that has been favorited - parkFavorited, setParkFavorited\n\n  const [favorite, setFavorite] = useState();\n  const [hasBeenSet, setHasBeenSet] = useState(false);\n\n  // useEffect(() => {  \n  //     async function favorite(currentUser, byway) {\n  //         await BywayApi.favoriteAByway(byway);\n  //         setFavorite(true);\n\n  //     }\n  //     favorite(currentUser, byway);\n  // }, []);\n\n  async function handleSubmit(evt) {\n    await BywayApi.favoriteAByway(currentUser.username, id);\n    setFavorite(id);\n    setHasBeenSet(true);\n    // set state variable to true\n  }\n\n  //     return (\n  //         <div>\n  //             <div>\n  //                 {/* {setFavorite(id)\n  //                     ?\n  //                     <Alert messages={[\"Byway added to your favorites.\"]} />\n  //                     :  */}\n  //                     {/* try in onSubmit? with a state variable that sets whether or not the byway has been favorited */}\n  //                     <button onClick={handleSubmit}>\n  //                         Add this byway to your favorites\n  //                     </button>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hasBeenSet ? /*#__PURE__*/_jsxDEV(Alert, {\n      messages: [\"Byway added to your favorites.\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add this byway to your favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n_s(FavoriteAByway, \"3pSLFw/VNVLVj6sYgChLwyZcaWU=\", false, function () {\n  return [useParams];\n});\n_c = FavoriteAByway;\nexport default FavoriteAByway;\nvar _c;\n$RefreshReg$(_c, \"FavoriteAByway\");","map":{"version":3,"names":["React","useState","useContext","useParams","BywayApi","LoadingSpinner","UserContext","Alert","FavoriteAByway","id","byway","currentUser","favorite","setFavorite","hasBeenSet","setHasBeenSet","handleSubmit","evt","favoriteAByway","username"],"sources":["/Users/mike/Desktop/scenic/src/actions/FavoriteAByway.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BywayApi from \"../api/api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport UserContext from \"../auth/UserContext\";\nimport Alert from \"../common/Alert\";\n\nfunction FavoriteAByway({id}) {\n    const { byway } = useParams();\n    const { currentUser } = useContext(UserContext);\n\n    // const [favorite, setFavorite] = useState(false);\n    // might need state for changing status on page from something that can be favorited to something that has been favorited - parkFavorited, setParkFavorited\n\n    const [favorite, setFavorite] = useState();\n    const [hasBeenSet, setHasBeenSet] = useState(false);\n\n    // useEffect(() => {  \n    //     async function favorite(currentUser, byway) {\n    //         await BywayApi.favoriteAByway(byway);\n    //         setFavorite(true);\n\n    //     }\n    //     favorite(currentUser, byway);\n    // }, []);\n\n    async function handleSubmit(evt) {\n        await BywayApi.favoriteAByway(currentUser.username, id);\n        setFavorite(id);\n        setHasBeenSet(true);\n        // set state variable to true\n    }\n\n//     return (\n//         <div>\n//             <div>\n//                 {/* {setFavorite(id)\n//                     ?\n//                     <Alert messages={[\"Byway added to your favorites.\"]} />\n//                     :  */}\n//                     {/* try in onSubmit? with a state variable that sets whether or not the byway has been favorited */}\n//                     <button onClick={handleSubmit}>\n//                         Add this byway to your favorites\n//                     </button>\n//             </div>\n//         </div>\n//     )\n// }\n\n        return (\n            <div>\n                {hasBeenSet\n                ? (\n                <Alert messages={[\"Byway added to your favorites.\"]} />\n                 ) : (\n                <button onClick={handleSubmit}>\n                    Add this byway to your favorites\n                </button>\n                 )}\n            </div>\n        )\n}\n\nexport default FavoriteAByway;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,KAAK,MAAM,iBAAiB;AAAC;AAEpC,SAASC,cAAc,OAAO;EAAA;EAAA,IAAN;IAACC;EAAE,CAAC;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,EAAE;EAC7B,MAAM;IAAEQ;EAAY,CAAC,GAAGT,UAAU,CAACI,WAAW,CAAC;;EAE/C;EACA;;EAEA,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,EAAE;EAC1C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,eAAee,YAAY,CAACC,GAAG,EAAE;IAC7B,MAAMb,QAAQ,CAACc,cAAc,CAACP,WAAW,CAACQ,QAAQ,EAAEV,EAAE,CAAC;IACvDI,WAAW,CAACJ,EAAE,CAAC;IACfM,aAAa,CAAC,IAAI,CAAC;IACnB;EACJ;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEQ,oBACI;IAAA,UACKD,UAAU,gBAEX,QAAC,KAAK;MAAC,QAAQ,EAAE,CAAC,gCAAgC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEvD;MAAQ,OAAO,EAAEE,YAAa;MAAA,UAAC;IAE/B;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACA;AAElB;AAAC,GAtDQR,cAAc;EAAA,QACDL,SAAS;AAAA;AAAA,KADtBK,cAAc;AAwDvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}