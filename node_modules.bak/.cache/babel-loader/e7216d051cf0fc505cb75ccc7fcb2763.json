{"ast":null,"code":"import _slicedToArray from\"/Users/mike/Desktop/scenic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import FilterSearch from\"./FilterSearch\";// import \"./SearchForm.css\";\nimport GeographicFeaturesSearch from\"./GeographicFeaturesSearch\";import DesignationSearch from\"./DesignationSearch\";/** Search widget.\n *\n * This component doesn't *do* the searching, but it renders the search\n * form and calls the `searchFor` function prop that runs in a parent to do the\n * searching.\n *\n * { CompanyList, JobList } -> SearchForm\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchForm(_ref){var searchFor=_ref.searchFor,filterByways=_ref.filterByways;// searchFor and filterByways are defined in FilterSearch (searchFor as search); when that component calls this one, those become useable here\nconsole.debug(\"SearchForm\",\"searchFor=\",typeof searchFor);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),minLength=_useState4[0],setMinLength=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),maxLength=_useState6[0],setMaxLength=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),geoFeaturesSelect=_useState8[0],setGeoFeaturesSelect=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),designationSearch=_useState10[0],setDesignationSearch=_useState10[1];// added the geoFeaturesSelect useState, setGeoFeaturesSelect gets set in the onChange in GeographicFeaturesSearch (passed in when that component is called in the JSX below in this component)\n/** Tell parent to filter */function handleSubmit(evt){// take care of accidentally trying to search for just spaces\nevt.preventDefault();searchFor(searchTerm.trim()||undefined);setSearchTerm('');}function handleSubmitFilter(e){e.preventDefault();filterByways({minLength:minLength,maxLength:maxLength,geoFeaturesSelect:geoFeaturesSelect,designationSearch:designationSearch});}// handles submit for searches involving filters, i.e. not searching by name. sends filters for search over to FilterSearch, which is where filterByways is defined\n// e comes from the onChange in min and max length's onChange; different from other filters because it's a value the user is typing in rather than a checkbox\n/** Update form fields */function handleChange(evt){setSearchTerm(evt.target.value);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"all-searches\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"byway-name-search\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Search byways by name\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"searchTerm\",children:\"Byway Name:\"}),/*#__PURE__*/_jsx(\"input\",{name:\"searchTerm\"// through the handleSubmit and its searchFor, the input's name makes it over to the search function in FilterSearch\n,placeholder:\"Enter search term..\",onChange:handleChange,value:searchTerm}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"not-name-searches\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitFilter,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Search byways by length. The longest of America's Byways\\xAE is the Alaska Marine Highway at 3500 miles!\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"minLength\",children:\"Minimum Byway Length:\"}),/*#__PURE__*/_jsx(\"input\",{name:\"minLength\",placeholder:\"how many miles?\",value:minLength,onChange:function onChange(e){return setMinLength(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"maxLength\",children:\"Maximum Byway Length:\"}),/*#__PURE__*/_jsx(\"input\",{name:\"maxLength\",placeholder:\"how many miles?\",value:maxLength,onChange:function onChange(e){return setMaxLength(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{children:\"Search byways by geographic features. You'll see byways that contain all entered criteria.\"}),/*#__PURE__*/_jsx(GeographicFeaturesSearch,{onChange:setGeoFeaturesSelect,value:geoFeaturesSelect}),/*#__PURE__*/_jsx(DesignationSearch,{onChange:setDesignationSearch,value:designationSearch}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})})]});}export default SearchForm;","map":{"version":3,"names":["React","useState","FilterSearch","GeographicFeaturesSearch","DesignationSearch","SearchForm","searchFor","filterByways","console","debug","searchTerm","setSearchTerm","minLength","setMinLength","maxLength","setMaxLength","geoFeaturesSelect","setGeoFeaturesSelect","designationSearch","setDesignationSearch","handleSubmit","evt","preventDefault","trim","undefined","handleSubmitFilter","e","handleChange","target","value"],"sources":["/Users/mike/Desktop/scenic/src/search/SearchForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FilterSearch from \"./FilterSearch\";\n// import \"./SearchForm.css\";\nimport GeographicFeaturesSearch from \"./GeographicFeaturesSearch\";\nimport DesignationSearch from \"./DesignationSearch\";\n\n/** Search widget.\n *\n * This component doesn't *do* the searching, but it renders the search\n * form and calls the `searchFor` function prop that runs in a parent to do the\n * searching.\n *\n * { CompanyList, JobList } -> SearchForm\n */\n\nfunction SearchForm({ searchFor, filterByways }) {\n  // searchFor and filterByways are defined in FilterSearch (searchFor as search); when that component calls this one, those become useable here\n  console.debug(\"SearchForm\", \"searchFor=\", typeof searchFor);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [minLength, setMinLength] = useState(0);\n  const [maxLength, setMaxLength] = useState(\"\");\n  const [geoFeaturesSelect, setGeoFeaturesSelect] = useState({});\n  const [designationSearch, setDesignationSearch] = useState({});\n  // added the geoFeaturesSelect useState, setGeoFeaturesSelect gets set in the onChange in GeographicFeaturesSearch (passed in when that component is called in the JSX below in this component)\n\n\n  /** Tell parent to filter */\n  function handleSubmit(evt) {\n    // take care of accidentally trying to search for just spaces\n    evt.preventDefault();\n    searchFor(searchTerm.trim() || undefined);\n    setSearchTerm('');\n  }\n\n  function handleSubmitFilter(e) {\n    e.preventDefault();\n    filterByways({minLength, maxLength, geoFeaturesSelect, designationSearch})\n\n  }\n  // handles submit for searches involving filters, i.e. not searching by name. sends filters for search over to FilterSearch, which is where filterByways is defined\n  // e comes from the onChange in min and max length's onChange; different from other filters because it's a value the user is typing in rather than a checkbox\n\n  /** Update form fields */\n  function handleChange(evt) {\n    setSearchTerm(evt.target.value);\n  }\n\n  return (\n      <div>\n        <div className=\"all-searches\">\n          <form className=\"byway-name-search\" onSubmit={handleSubmit}>\n            <p>Search byways by name</p>\n            <label htmlFor=\"searchTerm\">Byway Name:</label>\n            <input\n                name=\"searchTerm\"\n                // through the handleSubmit and its searchFor, the input's name makes it over to the search function in FilterSearch\n                placeholder=\"Enter search term..\"\n                onChange={handleChange}\n                value={searchTerm}\n            />\n            <button type=\"submit\">\n              Submit\n            </button>\n          </form>\n        </div>\n        <div className=\"not-name-searches\">\n          <form onSubmit={handleSubmitFilter}>\n            <p>Search byways by length. The longest of America's Byways&reg; is the Alaska Marine Highway at 3500 miles!</p>\n            <label htmlFor=\"minLength\">Minimum Byway Length:</label>\n            <input\n                name=\"minLength\"\n                placeholder=\"how many miles?\"\n                value={minLength}\n                onChange={e => setMinLength(e.target.value)}\n            />\n            <label htmlFor=\"maxLength\">Maximum Byway Length:</label>\n            <input\n                name=\"maxLength\"\n                placeholder=\"how many miles?\"\n                value={maxLength}\n                onChange={e => setMaxLength(e.target.value)}\n            />\n            <p>Search byways by geographic features. You'll see byways that contain all entered criteria.</p>\n            <GeographicFeaturesSearch \n              onChange={setGeoFeaturesSelect}\n              value={geoFeaturesSelect}\n            />\n            <DesignationSearch \n              onChange={setDesignationSearch}\n              value={designationSearch}\n            />\n            \n            <button type=\"submit\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n  );\n}\n\nexport default SearchForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}